spring:
  application:
    name: AIagent
  data:
    redis:
      url:  # your path
  ai:
    ollama:
      base-url:  # your path
      chat:
        options:
          model: qwen3:8b
      embedding:
        enabled: true
        options:
          model:  # your path
    deepseek:
      api-key:  # your key
    mcp:
      client:
        sse:
          connections:
            server1:
              url:  # your path
        stdio:
          servers-configuration: classpath:mcp-server.json
    vectorstore:
      redis:
        initialize-schema: true
        index-name: custom-index
        prefix: "custom-prefix:"
        batching-strategy: TOKEN_COUNT # Optional: Controls how documents are batched for embedding
server:
  port: 8123
  servlet:
    context-path: /api
# springdoc-openapi
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.mak.aiagent.controller
# knife4j
knife4j:
  enable: true
  setting:
    language: zh_cn
logging:
  level:
    #org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor: debug
    org.springframework.ai: DEBUG
